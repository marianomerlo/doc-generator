apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: microservice-template
  namespace: exchange
  labels:
    app: microservice-template
    name: microservice-template
    k8s-app: microservice-template
spec:
  strategy:
    rollingUpdate:
      maxSurge: {{default 1 .Values.service.maxSurge}}
      maxUnavailable: {{default 0 .Values.service.maxUnavailable}}
    type: RollingUpdate
  replicas: {{default 1 .Values.service.replicaCount}}
  template:
    metadata:
      name: microservice-template
      namespace: exchange
      labels:
        app: microservice-template
        name: microservice-template
        k8s-app: microservice-template
    spec:
      containers:
        - name: microservice-template
          image: "{{.Values.image.registry}}/{{.Values.image.org}}/{{.Values.image.name}}:{{default "latest" .Values.image.tag}}"
          imagePullPolicy: {{.Values.image.pullPolicy}}
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 3001
            periodSeconds: 30
            initialDelaySeconds: 60
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 3001
            periodSeconds: 10
            initialDelaySeconds: 10
            timeoutSeconds: 1
          env:
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: microservice-template-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: microservice-template-db
                  key: password
            - name: DATABASE_HOSTNAME
              value: "{{.Values.db.host}}"
            - name: DATABASE_PORT
              value: "{{.Values.db.port}}"
            - name: DATABASE_NAME
              value: "{{.Values.db.name}}"

            - name: CORE_SERVICES_HOST
              value: "{{.Values.service.coreServicesHost}}"
            - name: CORE_SERVICES_PROFILE_CACHE_ENABLED
              value: "{{.Values.service.coreServicesProfileCacheEnabled}}"

            - name: NEW_RELIC_LICENSE_KEY
              value: "{{.Values.newrelic.licenseKey}}"
            - name: NEW_RELIC_APP_NAME
              value: "{{.Values.newrelic.appName}}"
            - name: NEW_RELIC_ENABLED
              value: "{{.Values.newrelic.enabled}}"
            - name: NEW_RELIC_EXPLAIN_THRESHOLD
              value: "{{.Values.newrelic.explainThresholdMs}}"
            - name: NEW_RELIC_RECORD_SQL
              value: "{{.Values.newrelic.recordSql}}"
            - name: NEW_RELIC_SLOW_SQL_ENABLED
              value: "{{.Values.newrelic.slowSqlEnabled}}"

      imagePullSecrets:
        - name: devdocker-registrykey
